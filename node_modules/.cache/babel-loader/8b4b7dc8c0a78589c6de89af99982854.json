{"ast":null,"code":"var _jsxFileName = \"/Users/goncalosantos/Desktop/code-immersives/Term2/full-stack-projects/mern-blog/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport BlogsPage from \"./Pages/Blogs\";\nimport PostBlogPage from \"./Pages/PostBlogPage\";\nimport BlogManager from \"./Pages/BlogManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlEndpoint = \"http://localhost:4000\";\n\nconst App = () => {\n  _s();\n\n  const [serverJSON, setServerJSON] = useState({\n    message: []\n  });\n  const [sortField, setSortField] = useState(\"id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  const [filterField, setFilterField] = useState(\"title\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [isFetching, setIsFetching] = useState(false);\n  const [adminBlogList, setAdminBlogList] = useState({\n    message: []\n  });\n  const [adminBlogsLoading, setAdminBlogsLoading] = useState(false);\n\n  const fetchSingleBlog = async blogId => {\n    const url = `${urlEndpoint}/blogs/single-blog/${blogId}`;\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    return responseJSON.message;\n  };\n\n  const blogSubmit = async blog => {\n    setIsFetching(true);\n    const url = `${urlEndpoint}/blogs/blog-submit`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(blog)\n    });\n    const responseJSON = await response.json();\n    setIsFetching(false);\n    return responseJSON;\n  };\n\n  const deleteBlog = async blogId => {\n    setAdminBlogsLoading(true);\n    const url = `${urlEndpoint}/admin/delete-blog/${blogId}`;\n    const response = await fetch(url, {\n      method: \"DELETE\"\n    });\n    const responseJSON = await response.json();\n    setAdminBlogsLoading(false);\n  };\n\n  useEffect(() => {\n    const fetchAdminBlogList = async () => {\n      const apiResponse = await fetch(`${urlEndpoint}/admin/blog-list`);\n      const json = await apiResponse.json();\n      setAdminBlogList(json);\n      return;\n    };\n\n    fetchAdminBlogList();\n  }, [adminBlogsLoading]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${urlEndpoint}/blogs/all-blogs?sortField=${sortField}&sortOrder=${sortOrder}&filterField=${filterField}&filterValue=${filterValue}&limit=${limit}&page=${page}`;\n      const apiResponse = await fetch(url);\n      const apiJSON = await apiResponse.json();\n      setServerJSON(apiJSON);\n      return;\n    };\n\n    fetchData();\n  }, [sortField, sortOrder, filterField, filterValue, limit, page, isFetching]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(BlogsPage, {\n          blogs: serverJSON.message,\n          sortField: sortField,\n          setSortField: setSortField,\n          sortOrder: sortOrder,\n          setSortOrder: setSortOrder,\n          filterField: filterField,\n          setFilterField: setFilterField,\n          filterValue: filterValue,\n          setFilterValue: setFilterValue,\n          limit: limit,\n          setLimit: setLimit,\n          page: page,\n          setPage: setPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/post-blog\",\n        element: /*#__PURE__*/_jsxDEV(PostBlogPage, {\n          blogSubmit: blogSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blog-manager\",\n        element: /*#__PURE__*/_jsxDEV(BlogManager, {\n          adminBlogList: adminBlogList.message,\n          deleteBlog: deleteBlog,\n          fetchSingleBlog: fetchSingleBlog,\n          urlEndpoint: urlEndpoint,\n          setAdminBlogsLoading: setAdminBlogsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"YunpucyjEYJge1WV9wXBXEaZ+EE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Link","BlogsPage","PostBlogPage","BlogManager","urlEndpoint","App","serverJSON","setServerJSON","message","sortField","setSortField","sortOrder","setSortOrder","filterField","setFilterField","filterValue","setFilterValue","limit","setLimit","page","setPage","isFetching","setIsFetching","adminBlogList","setAdminBlogList","adminBlogsLoading","setAdminBlogsLoading","fetchSingleBlog","blogId","url","response","fetch","responseJSON","json","blogSubmit","blog","method","headers","body","JSON","stringify","deleteBlog","fetchAdminBlogList","apiResponse","fetchData","apiJSON"],"sources":["/Users/goncalosantos/Desktop/code-immersives/Term2/full-stack-projects/mern-blog/frontend/src/App.js"],"sourcesContent":["import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport BlogsPage from \"./Pages/Blogs\";\nimport PostBlogPage from \"./Pages/PostBlogPage\";\nimport BlogManager from \"./Pages/BlogManager\";\n\nconst urlEndpoint = \"http://localhost:4000\";\n\nconst App = () => {\n  const [serverJSON, setServerJSON] = useState({ message: [] });\n  const [sortField, setSortField] = useState(\"id\");\n  const [sortOrder, setSortOrder] = useState(\"DESC\");\n  const [filterField, setFilterField] = useState(\"title\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [isFetching, setIsFetching] = useState(false);\n  const [adminBlogList, setAdminBlogList] = useState({ message: [] });\n  const [adminBlogsLoading, setAdminBlogsLoading] = useState(false);\n\n  const fetchSingleBlog = async (blogId) => {\n    const url = `${urlEndpoint}/blogs/single-blog/${blogId}`;\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    return responseJSON.message;\n  };\n\n  const blogSubmit = async (blog) => {\n    setIsFetching(true);\n    const url = `${urlEndpoint}/blogs/blog-submit`;\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(blog),\n    });\n    const responseJSON = await response.json();\n    setIsFetching(false);\n    return responseJSON;\n  };\n\n  const deleteBlog = async (blogId) => {\n    setAdminBlogsLoading(true);\n    const url = `${urlEndpoint}/admin/delete-blog/${blogId}`;\n    const response = await fetch(url, {\n      method: \"DELETE\",\n    });\n    const responseJSON = await response.json();\n    setAdminBlogsLoading(false);\n  };\n\n  useEffect(() => {\n    const fetchAdminBlogList = async () => {\n      const apiResponse = await fetch(`${urlEndpoint}/admin/blog-list`);\n      const json = await apiResponse.json();\n      setAdminBlogList(json);\n      return;\n    };\n    fetchAdminBlogList();\n  }, [adminBlogsLoading]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `${urlEndpoint}/blogs/all-blogs?sortField=${sortField}&sortOrder=${sortOrder}&filterField=${filterField}&filterValue=${filterValue}&limit=${limit}&page=${page}`;\n      const apiResponse = await fetch(url);\n      const apiJSON = await apiResponse.json();\n      setServerJSON(apiJSON);\n      return;\n    };\n    fetchData();\n  }, [sortField, sortOrder, filterField, filterValue, limit, page, isFetching]);\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          index\n          element={\n            <BlogsPage\n              blogs={serverJSON.message}\n              sortField={sortField}\n              setSortField={setSortField}\n              sortOrder={sortOrder}\n              setSortOrder={setSortOrder}\n              filterField={filterField}\n              setFilterField={setFilterField}\n              filterValue={filterValue}\n              setFilterValue={setFilterValue}\n              limit={limit}\n              setLimit={setLimit}\n              page={page}\n              setPage={setPage}\n            />\n          }\n        ></Route>\n        <Route\n          path=\"/post-blog\"\n          element={<PostBlogPage blogSubmit={blogSubmit} />}\n        />\n        <Route\n          path=\"/blog-manager\"\n          element={\n            <BlogManager\n              adminBlogList={adminBlogList.message}\n              deleteBlog={deleteBlog}\n              fetchSingleBlog={fetchSingleBlog}\n              urlEndpoint={urlEndpoint}\n              setAdminBlogsLoading={setAdminBlogsLoading}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}